// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

enum UserRole {
  Student
  Professor
}

model Enrollment {
  id        String   @id @default(cuid())
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  String
  student   User     @relation(fields: [studentId], references: [id])
  studentId String
  createdAt DateTime @default(now())
}

model User {
  id              String       @id @default(cuid())
  username        String       @unique
  password        String
  name            String?
  email           String       @unique
  emailVerified   DateTime?
  image           String?
  role            UserRole
  taughtCourses   Course[]     @relation("TaughtBy")
  organization    Organization @relation(fields: [organizationId], references: [id])
  organizationId  String
  enrolledCourses Enrollment[]
}

model Course {
  id               String       @id @default(cuid())
  codeName         String
  name             String
  description      String
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  taughtBy         User         @relation("TaughtBy", fields: [taughtById], references: [id])
  taughtById       String
  organization     Organization @relation(fields: [organizationId], references: [id])
  organizationId   String
  enrolledStudents Enrollment[]

  @@unique([codeName, organizationId])
}

model Organization {
  id        String   @id
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     String
  Course    Course[]
  User      User[]
}
